services:
  # Databases
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: taskpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskuser"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:7-jammy
    environment:
      MONGO_INITDB_DATABASE: taskmanager
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Microservices
  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://mongodb:27017/taskmanager
      JWT_SECRET: supersecretjwttokenfortaskmanagement
    depends_on:
      mongodb:
        condition: service_healthy
    # healthcheck removed - no health endpoint implemented yet

  task-service:
    build: ./task-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      POSTGRES_URI: postgresql://taskuser:taskpassword@postgres:5432/taskmanager
      JWT_SECRET: supersecretjwttokenfortaskmanagement
      USER_SERVICE_URL: http://user-service:3001
    depends_on:
      postgres:
        condition: service_healthy
    # healthcheck removed - no health endpoint implemented yet

  notification-service:
    build: ./notification-service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      REDIS_HOST: redis
      REDIS_PORT: 6379
      USER_SERVICE_URL: http://user-service:3001
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
    depends_on:
      redis:
        condition: service_healthy
    # healthcheck removed - no health endpoint implemented yet

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: ""
    depends_on:
      - user-service
      - task-service
      - notification-service

volumes:
  postgres_data:
  mongodb_data:
  redis_data: